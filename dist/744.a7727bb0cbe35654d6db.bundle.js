"use strict";(self.webpackChunkpet_1=self.webpackChunkpet_1||[]).push([[744],{1526:(e,n,t)=>{t.d(n,{Q:()=>a});var r=t(5162),a=(0,r.hg)("profile/getProfileById",(function(e,n){return t=void 0,r=void 0,o=function(){var t,r,a,o,i;return function(e,n){var t,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(l){return function(u){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;o&&(o=0,l[0]&&(i=0)),i;)try{if(t=1,r&&(a=2&l[0]?r.return:l[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,l[1])).done)return a;switch(r=0,a&&(l=[2&l[0],a.value]),l[0]){case 0:case 1:a=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,r=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==l[0]&&2!==l[0])){i=0;continue}if(3===l[0]&&(!a||l[1]>a[0]&&l[1]<a[3])){i.label=l[1];break}if(6===l[0]&&i.label<a[1]){i.label=a[1],a=l;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(l);break}a[2]&&i.ops.pop(),i.trys.pop();continue}l=n.call(e,i)}catch(e){l=[6,e],r=0}finally{t=a=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,u])}}}(this,(function(l){switch(l.label){case 0:return l.trys.push([0,2,,3]),[4,n.extra.api.post("/profile",{id:e})];case 1:return(t=l.sent()).data?(n.fulfillWithValue(t.data),[2,t.data]):[2,n.rejectWithValue("No data in response")];case 2:return r=l.sent(),a=(null===(i=null===(o=r.response)||void 0===o?void 0:o.data)||void 0===i?void 0:i.message)||"Failed to get profile",[2,n.rejectWithValue(a)];case 3:return[2]}}))},new((a=void 0)||(a=Promise))((function(e,n){function i(e){try{u(o.next(e))}catch(e){n(e)}}function l(e){try{u(o.throw(e))}catch(e){n(e)}}function u(n){var t;n.done?e(n.value):(t=n.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}u((o=o.apply(t,r||[])).next())}));var t,r,a,o}))},6945:(e,n,t)=>{t.d(n,{vi:()=>o,Cn:()=>l});var r=t(5162),a=t(1526),o={isLoading:!1,error:void 0,readonly:!0,profileData:{age:"",country:"",lastname:"",name:""}},i=(0,r.oM)({name:"profile",initialState:o,reducers:{},extraReducers:function(e){e.addCase(a.Q.pending,(function(e,n){e.isLoading=!0,e.error=void 0})).addCase(a.Q.rejected,(function(e,n){e.isLoading=!1,e.error=n.payload})).addCase(a.Q.fulfilled,(function(e,n){e.isLoading=!1,e.error=void 0;var t=n.payload,r=t.age,a=t.country,o=t.lastname,i=t.name;e.isLoading=!1;var l={age:r,country:a,lastname:o,name:i};e.profileData=l}))}}),l=i.reducer;i.actions},3744:(e,n,t)=>{t.r(n),t.d(n,{default:()=>y});var r=t(5893),a=t(7294),o=t(3005);var i=(0,a.lazy)((function(){return t.e(669).then(t.bind(t,9669))})),l=t(5162),u=t(6945),c=function(){return c=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},c.apply(this,arguments)},s={editableProfile:u.vi.profileData,error:void 0,isLoading:!1},d=(0,l.oM)({name:"profileCard",initialState:s,reducers:{updateProfile:function(e,n){e.editableProfile=c(c({},e.editableProfile),n.payload)}},extraReducers:function(e){e.addCase(h.fulfilled,(function(e,n){e.isLoading=!1,e.error=void 0})).addCase(h.pending,(function(e,n){e.isLoading=!0,e.error=void 0})).addCase(h.rejected,(function(e,n){e.isLoading=!1,e.error=n.payload}))}}),f=d.actions,p=(d.reducer,function(e,n,t,r){return new(t||(t=Promise))((function(a,o){function i(e){try{u(r.next(e))}catch(e){o(e)}}function l(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}u((r=r.apply(e,n||[])).next())}))}),h=(0,l.hg)("profileCardSlice/updateProfileById",(function(e,n){return p(void 0,void 0,void 0,(function(){var t,r,a,o;return function(e,n){var t,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(l){return function(u){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;o&&(o=0,l[0]&&(i=0)),i;)try{if(t=1,r&&(a=2&l[0]?r.return:l[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,l[1])).done)return a;switch(r=0,a&&(l=[2&l[0],a.value]),l[0]){case 0:case 1:a=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,r=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==l[0]&&2!==l[0])){i=0;continue}if(3===l[0]&&(!a||l[1]>a[0]&&l[1]<a[3])){i.label=l[1];break}if(6===l[0]&&i.label<a[1]){i.label=a[1],a=l;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(l);break}a[2]&&i.ops.pop(),i.trys.pop();continue}l=n.call(e,i)}catch(e){l=[6,e],r=0}finally{t=a=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,u])}}}(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4,n.extra.api.post("/updateProfile",e)];case 1:return(t=i.sent()).data?(n.dispatch(f.updateProfile(t.data)),[2,t.data]):[2,n.rejectWithValue("No data in response")];case 2:return r=i.sent(),n.rejectWithValue((null===(o=null===(a=null==r?void 0:r.response)||void 0===a?void 0:a.data)||void 0===o?void 0:o.message)||"Error with server!"),[3,3];case 3:return[2]}}))}))})),v=t(2327);const y=(0,a.memo)((function(e){var n=e.someClasses,t=(0,v.$)().t;return(0,r.jsxs)("div",{className:(0,o.A)("WDcPPDH8",{},[n]),children:[t("страница профиль"),(0,r.jsx)(i,{})]})}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQ0LmJjZTg2MmRmNTQ3NDIzNzA1OWVjLmJ1bmRsZS5qcyIsIm1hcHBpbmdzIjoiNEhBS2FBLEdBQWlCQyxFQUFBQSxFQUFBQSxJQUk1QiwwQkFBMEIsU0FBT0MsRUFBSUMsR0FBUSxPLE9BQUEsRSxPQUFBLEUsRUFBQSxXLHduQ0FHMUIsTyxzQkFBQSxHQUFNQSxFQUFTQyxNQUFNQyxJQUFJQyxLQUFjLFdBQVksQ0FDbEVKLEdBQUlBLEssT0FHTixPQUpNSyxFQUFXQyxFQUFBQyxRQUlIQyxNQUlkUCxFQUFTUSxpQkFBaUJKLEVBQVNHLE1BRTVCLENBQVAsRUFBT0gsRUFBU0csT0FMUCxDQUFQLEVBQU9QLEVBQVNTLGdCQUFnQix3QixPQVFsQyxPLFdBRE1DLEdBQWlDLFFBQWxCQyxFQUFZLFFBQVpDLEVBQUFDLEVBQUlULGdCQUFRLElBQUFRLE9BQUEsRUFBQUEsRUFBRUwsWUFBSSxJQUFBSSxPQUFBLEVBQUFBLEVBQUVHLFVBQVcsd0JBQzdDLENBQVAsRUFBT2QsRUFBU1MsZ0JBQWdCQyxJLGtDQWhCVyxLLG9WQ0xsQ0ssRUFBOEIsQ0FDekNDLFdBQVcsRUFDWEMsV0FBT0MsRUFDUEMsVUFBVSxFQUNWQyxZQUFhLENBQ1hDLElBQUssR0FDTEMsUUFBUyxHQUNUQyxTQUFVLEdBQ1ZDLEtBQU0sS0FJR0MsR0FBZUMsRUFBQUEsRUFBQUEsSUFBWSxDQUN0Q0YsS0FBTSxVQUNORyxhQUFjWixFQUVkYSxTQUFVLENBQUMsRUFDWEMsY0FBZSxTQUFBQyxHQUNiQSxFQUNHQyxRQUFRbEMsRUFBQUEsRUFBQUEsU0FBd0IsU0FBQ21DLEVBQU9DLEdBQ3ZDRCxFQUFNaEIsV0FBWSxFQUNsQmdCLEVBQU1mLFdBQVFDLENBQ2hCLElBQ0NhLFFBQVFsQyxFQUFBQSxFQUFBQSxVQUF5QixTQUFDbUMsRUFBT0MsR0FDeENELEVBQU1oQixXQUFZLEVBQ2xCZ0IsRUFBTWYsTUFBUWdCLEVBQU9DLE9BQ3ZCLElBQ0NILFFBQVFsQyxFQUFBQSxFQUFBQSxXQUEwQixTQUFDbUMsRUFBT0MsR0FDekNELEVBQU1oQixXQUFZLEVBQ2xCZ0IsRUFBTWYsV0FBUUMsRUFDUixJQUFBTixFQUFtQ3FCLEVBQU9DLFFBQXhDYixFQUFHVCxFQUFBUyxJQUFFQyxFQUFPVixFQUFBVSxRQUFFQyxFQUFRWCxFQUFBVyxTQUFFQyxFQUFJWixFQUFBWSxLQUNwQ1EsRUFBTWhCLFdBQVksRUFDbEIsSUFBTVQsRUFBTyxDQUNYYyxJQUFHQSxFQUNIQyxRQUFPQSxFQUNQQyxTQUFRQSxFQUNSQyxLQUFJQSxHQUVOUSxFQUFNWixZQUFjYixDQUN0QixHQUNKLElBR3NCNEIsRUFBbUJWLEVBQVlXLFFBQ1pYLEVBQVlZLE8saUZDOUN2RCxJQUFNQyxHQUFlQyxFQUFBQSxFQUFBQSxPQUFLLFdBQ3hCLE9BQU8sNkJBQ1QsSSxvT0NFTVosRUFBaUMsQ0FDckNhLGdCQUFpQnpCLEVBQUFBLEdBQUFBLFlBQ2pCRSxXQUFPQyxFQUNQRixXQUFXLEdBR0F5QixHQUFtQmYsRUFBQUEsRUFBQUEsSUFBWSxDQUMxQ0YsS0FBTSxjQUNORyxhQUFZQSxFQUNaQyxTQUFVLENBQ1JjLGNBQWUsU0FDYlYsRUFDQUMsR0FFQUQsRUFBTVEsZ0JBQWVHLEVBQUFBLEVBQUEsR0FDaEJYLEVBQU1RLGlCQUNOUCxFQUFPQyxRQUVkLEdBRUZMLGNBQWUsU0FBQUMsR0FDYkEsRUFDR0MsUUFBUWEsRUFBa0JDLFdBQVcsU0FBQ2IsRUFBT0MsR0FDNUNELEVBQU1oQixXQUFZLEVBQ2xCZ0IsRUFBTWYsV0FBUUMsQ0FDaEIsSUFDQ2EsUUFBUWEsRUFBa0JFLFNBQVMsU0FBQ2QsRUFBT0MsR0FDMUNELEVBQU1oQixXQUFZLEVBQ2xCZ0IsRUFBTWYsV0FBUUMsQ0FDaEIsSUFDQ2EsUUFBUWEsRUFBa0JHLFVBQVUsU0FBQ2YsRUFBT0MsR0FDM0NELEVBQU1oQixXQUFZLEVBQ2xCZ0IsRUFBTWYsTUFBUWdCLEVBQU9DLE9BQ3ZCLEdBQ0osSUFHc0JjLEVBQXVCUCxFQUFnQkosUSxHQUNoQkksRUFBZ0JMLFEscVNDakNsRFEsR0FBb0I5QyxFQUFBQSxFQUFBQSxJQUkvQixzQ0FBc0MsU0FBT21ELEVBQVVqRCxHQUFRLE9BQUFrRCxPQUFBLDRCLHNuQ0FFNUMsTyxzQkFBQSxHQUFNbEQsRUFBU0MsTUFBTUMsSUFBSUMsS0FDeEMsaUJBQ0E4QyxJLE9BR0YsT0FMTTdDLEVBQVdDLEVBQUFDLFFBS0hDLE1BSWRQLEVBQVNtRCxTQUFTSCxFQUFtQk4sY0FBY3RDLEVBQVNHLE9BRXJELENBQVAsRUFBT0gsRUFBU0csT0FMUCxDQUFQLEVBQU9QLEVBQVNTLGdCQUFnQix3Qix5QkFPbENULEVBQVNTLGlCQUNZLFFBQW5CRSxFQUFhLFFBQWJDLEVBQUFDLGFBQUcsRUFBSEEsRUFBS1QsZ0JBQVEsSUFBQVEsT0FBQSxFQUFBQSxFQUFFTCxZQUFJLElBQUFJLE9BQUEsRUFBQUEsRUFBRUcsVUFBVyxzQiwyQ0NWdEMsU0FYMENzQyxFQUFBQSxFQUFBQSxPQUFLLFNBQUN4QyxHLElBQUV5QyxFQUFXekMsRUFBQXlDLFlBQ25EQyxHQUFNQyxFQUFBQSxFQUFBQSxLQUFnQkQsRUFFOUIsT0FDRUUsRUFBQUEsRUFBQUEsTUFBQSxPQUFLQyxXQUFXQyxFQUFBQSxFQUFBQSxHQ2JVLFdEYTBCLENBQUMsRUFBRyxDQUFDTCxJQUFhTSxTQUFBLENBQ25FTCxFQUFVLHFCQUNYTSxFQUFBQSxFQUFBQSxLQUFDQyxFQUFXLE1BR2xCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZXRfMS8uL3NyYy9lbnRpdGllcy9Qcm9maWxlL21vZGVsL3NlcnZpY2VzL2dldFByb2ZpbGVCeUlkL2dldFByb2ZpbGVCeUlkLnRzIiwid2VicGFjazovL3BldF8xLy4vc3JjL2VudGl0aWVzL1Byb2ZpbGUvbW9kZWwvc2xpY2UvUHJvZmlsZVNsaWNlLnRzIiwid2VicGFjazovL3BldF8xLy4vc3JjL2ZlYXR1cmVzL0VkaXRhYmxlUHJvZmlsZUNhcmQvdWkvUHJvZmlsZUNhcmQvUHJvZmlsZUNhcmQuYXN5bmMudHN4Iiwid2VicGFjazovL3BldF8xLy4vc3JjL2ZlYXR1cmVzL0VkaXRhYmxlUHJvZmlsZUNhcmQvbW9kZWwvc2xpY2UvUHJvZmlsZUNhcmRTbGljZS50cyIsIndlYnBhY2s6Ly9wZXRfMS8uL3NyYy9mZWF0dXJlcy9FZGl0YWJsZVByb2ZpbGVDYXJkL21vZGVsL3NlcnZpY2VzL3VwZGF0ZVByb2ZpbGVCeUlkLnRzIiwid2VicGFjazovL3BldF8xLy4vc3JjL3BhZ2VzL1Byb2ZpbGVQYWdlL3VpL1Byb2ZpbGVQYWdlLnRzeCIsIndlYnBhY2s6Ly9wZXRfMS8uL3NyYy9wYWdlcy9Qcm9maWxlUGFnZS91aS9Qcm9maWxlUGFnZS5tb2R1bGUuc2Nzcz8zMjIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFzeW5jVGh1bmsgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQgeyBQcm9maWxlIH0gZnJvbSBcIi4uLy4uL3R5cGVzL1Byb2ZpbGVTY2hlbWFcIjtcclxuXHJcbnR5cGUgUHJvZmlsZUlkID0gc3RyaW5nO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFByb2ZpbGVCeUlkID0gY3JlYXRlQXN5bmNUaHVuazxcclxuICBQcm9maWxlLFxyXG4gIFByb2ZpbGVJZCxcclxuICB7IHJlamVjdFZhbHVlOiBzdHJpbmcgfVxyXG4+KFwicHJvZmlsZS9nZXRQcm9maWxlQnlJZFwiLCBhc3luYyAoaWQsIHRodW5rQVBJKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vQHRzLWlnbm9yZVxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aHVua0FQSS5leHRyYS5hcGkucG9zdDxQcm9maWxlPihcIi9wcm9maWxlXCIsIHtcclxuICAgICAgaWQ6IGlkLFxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5kYXRhKSB7XHJcbiAgICAgIHJldHVybiB0aHVua0FQSS5yZWplY3RXaXRoVmFsdWUoXCJObyBkYXRhIGluIHJlc3BvbnNlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHRodW5rQVBJLmZ1bGZpbGxXaXRoVmFsdWUocmVzcG9uc2UuZGF0YSk7XHJcblxyXG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XHJcbiAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVyci5yZXNwb25zZT8uZGF0YT8ubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBnZXQgcHJvZmlsZVwiO1xyXG4gICAgcmV0dXJuIHRodW5rQVBJLnJlamVjdFdpdGhWYWx1ZShlcnJvck1lc3NhZ2UpO1xyXG4gIH1cclxufSk7XHJcbiIsImltcG9ydCB7IGNyZWF0ZVNsaWNlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHsgUHJvZmlsZVNjaGVtYSB9IGZyb20gXCIuLi90eXBlcy9Qcm9maWxlU2NoZW1hXCI7XHJcbmltcG9ydCB7IGdldFByb2ZpbGVCeUlkIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2dldFByb2ZpbGVCeUlkL2dldFByb2ZpbGVCeUlkXCI7XHJcblxyXG5leHBvcnQgY29uc3QgUHJvZmlsZVN0YXRlOiBQcm9maWxlU2NoZW1hID0ge1xyXG4gIGlzTG9hZGluZzogZmFsc2UsXHJcbiAgZXJyb3I6IHVuZGVmaW5lZCxcclxuICByZWFkb25seTogdHJ1ZSxcclxuICBwcm9maWxlRGF0YToge1xyXG4gICAgYWdlOiBcIlwiLFxyXG4gICAgY291bnRyeTogXCJcIixcclxuICAgIGxhc3RuYW1lOiBcIlwiLFxyXG4gICAgbmFtZTogXCJcIixcclxuICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFByb2ZpbGVTbGljZSA9IGNyZWF0ZVNsaWNlKHtcclxuICBuYW1lOiBcInByb2ZpbGVcIixcclxuICBpbml0aWFsU3RhdGU6IFByb2ZpbGVTdGF0ZSxcclxuXHJcbiAgcmVkdWNlcnM6IHt9LFxyXG4gIGV4dHJhUmVkdWNlcnM6IGJ1aWxkZXIgPT4ge1xyXG4gICAgYnVpbGRlclxyXG4gICAgICAuYWRkQ2FzZShnZXRQcm9maWxlQnlJZC5wZW5kaW5nLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IHRydWU7XHJcbiAgICAgICAgc3RhdGUuZXJyb3IgPSB1bmRlZmluZWQ7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5hZGRDYXNlKGdldFByb2ZpbGVCeUlkLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgIHN0YXRlLmVycm9yID0gYWN0aW9uLnBheWxvYWQ7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5hZGRDYXNlKGdldFByb2ZpbGVCeUlkLmZ1bGZpbGxlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgICBzdGF0ZS5pc0xvYWRpbmcgPSBmYWxzZTtcclxuICAgICAgICBzdGF0ZS5lcnJvciA9IHVuZGVmaW5lZDtcclxuICAgICAgICBjb25zdCB7IGFnZSwgY291bnRyeSwgbGFzdG5hbWUsIG5hbWUgfSA9IGFjdGlvbi5wYXlsb2FkO1xyXG4gICAgICAgIHN0YXRlLmlzTG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSB7XHJcbiAgICAgICAgICBhZ2UsXHJcbiAgICAgICAgICBjb3VudHJ5LFxyXG4gICAgICAgICAgbGFzdG5hbWUsXHJcbiAgICAgICAgICBuYW1lLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgc3RhdGUucHJvZmlsZURhdGEgPSBkYXRhO1xyXG4gICAgICB9KTtcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBjb25zdCB7IHJlZHVjZXI6IHByb2ZpbGVSZWR1Y2VyIH0gPSBQcm9maWxlU2xpY2U7XHJcbmV4cG9ydCBjb25zdCB7IGFjdGlvbnM6IHByb2ZpbGVBY3Rpb25zIH0gPSBQcm9maWxlU2xpY2U7XHJcbiIsImltcG9ydCB7IGxhenkgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmNvbnN0IFByb2ZpbGVBc3luYyA9IGxhenkoKCkgPT4ge1xyXG4gIHJldHVybiBpbXBvcnQoXCIuL1Byb2ZpbGVDYXJkXCIpO1xyXG59KTtcclxuXHJcbmV4cG9ydCB7IFByb2ZpbGVBc3luYyBhcyBQcm9maWxlQ2FyZCB9O1xyXG4iLCJpbXBvcnQgeyBjcmVhdGVTbGljZSwgUGF5bG9hZEFjdGlvbiB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbmltcG9ydCB7IFByb2ZpbGVDYXJkU3RhdGUgfSBmcm9tIFwiLi4vdHlwZXMvUHJvZmlsZUNhcmRTY2hlbWFcIjtcclxuaW1wb3J0IHsgUHJvZmlsZVN0YXRlIH0gZnJvbSBcImVudGl0aWVzL1Byb2ZpbGUvbW9kZWwvc2xpY2UvUHJvZmlsZVNsaWNlXCI7XHJcbmltcG9ydCB7IFByb2ZpbGUgfSBmcm9tIFwiZW50aXRpZXMvUHJvZmlsZVwiO1xyXG5pbXBvcnQgeyB1cGRhdGVQcm9maWxlQnlJZCB9IGZyb20gXCIuLi9zZXJ2aWNlcy91cGRhdGVQcm9maWxlQnlJZFwiO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlOiBQcm9maWxlQ2FyZFN0YXRlID0ge1xyXG4gIGVkaXRhYmxlUHJvZmlsZTogUHJvZmlsZVN0YXRlLnByb2ZpbGVEYXRhLFxyXG4gIGVycm9yOiB1bmRlZmluZWQsXHJcbiAgaXNMb2FkaW5nOiBmYWxzZSxcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBQcm9maWxlQ2FyZFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xyXG4gIG5hbWU6IFwicHJvZmlsZUNhcmRcIixcclxuICBpbml0aWFsU3RhdGUsXHJcbiAgcmVkdWNlcnM6IHtcclxuICAgIHVwZGF0ZVByb2ZpbGU6IChcclxuICAgICAgc3RhdGU6IFByb2ZpbGVDYXJkU3RhdGUsXHJcbiAgICAgIGFjdGlvbjogUGF5bG9hZEFjdGlvbjxQcm9maWxlPixcclxuICAgICkgPT4ge1xyXG4gICAgICBzdGF0ZS5lZGl0YWJsZVByb2ZpbGUgPSB7XHJcbiAgICAgICAgLi4uc3RhdGUuZWRpdGFibGVQcm9maWxlLFxyXG4gICAgICAgIC4uLmFjdGlvbi5wYXlsb2FkLFxyXG4gICAgICB9O1xyXG4gICAgfSxcclxuICB9LFxyXG4gIGV4dHJhUmVkdWNlcnM6IGJ1aWxkZXIgPT4ge1xyXG4gICAgYnVpbGRlclxyXG4gICAgICAuYWRkQ2FzZSh1cGRhdGVQcm9maWxlQnlJZC5mdWxmaWxsZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgc3RhdGUuaXNMb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgc3RhdGUuZXJyb3IgPSB1bmRlZmluZWQ7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5hZGRDYXNlKHVwZGF0ZVByb2ZpbGVCeUlkLnBlbmRpbmcsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgc3RhdGUuaXNMb2FkaW5nID0gdHJ1ZTtcclxuICAgICAgICBzdGF0ZS5lcnJvciA9IHVuZGVmaW5lZDtcclxuICAgICAgfSlcclxuICAgICAgLmFkZENhc2UodXBkYXRlUHJvZmlsZUJ5SWQucmVqZWN0ZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgc3RhdGUuaXNMb2FkaW5nID0gZmFsc2U7XHJcbiAgICAgICAgc3RhdGUuZXJyb3IgPSBhY3Rpb24ucGF5bG9hZDtcclxuICAgICAgfSk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgeyBhY3Rpb25zOiBQcm9maWxlQ2FyZEFjdGlvbnMgfSA9IFByb2ZpbGVDYXJkU2xpY2U7XHJcbmV4cG9ydCBjb25zdCB7IHJlZHVjZXI6IFByb2ZpbGVDYXJkUmVkdWNlciB9ID0gUHJvZmlsZUNhcmRTbGljZTtcclxuIiwiaW1wb3J0IHsgY3JlYXRlQXN5bmNUaHVuayB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbmltcG9ydCB7IFRodW5rQ29uZmlnIH0gZnJvbSBcImFwcC9wcm92aWRlcnMvU3RvcmVQcm92aWRlclwiO1xyXG5pbXBvcnQgeyBQcm9maWxlIH0gZnJvbSBcImVudGl0aWVzL1Byb2ZpbGVcIjtcclxuaW1wb3J0IHsgVXNlciB9IGZyb20gXCJlbnRpdGllcy9Vc2VyXCI7XHJcbmltcG9ydCB7IFByb2ZpbGVDYXJkQWN0aW9ucyB9IGZyb20gXCIuLi9zbGljZS9Qcm9maWxlQ2FyZFNsaWNlXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIHVwZGF0ZVByb2ZpbGVCeUlkUHJvcHMge1xyXG4gIHVzZXI6IFVzZXI7XHJcbiAgaWQ6IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHVwZGF0ZVByb2ZpbGVCeUlkID0gY3JlYXRlQXN5bmNUaHVuazxcclxuICBQcm9maWxlLFxyXG4gIHVwZGF0ZVByb2ZpbGVCeUlkUHJvcHMsXHJcbiAgVGh1bmtDb25maWc8c3RyaW5nPlxyXG4+KFwicHJvZmlsZUNhcmRTbGljZS91cGRhdGVQcm9maWxlQnlJZFwiLCBhc3luYyAodXNlckRhdGEsIHRodW5rQVBJKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGh1bmtBUEkuZXh0cmEuYXBpLnBvc3Q8UHJvZmlsZT4oXHJcbiAgICAgIFwiL3VwZGF0ZVByb2ZpbGVcIixcclxuICAgICAgdXNlckRhdGEsXHJcbiAgICApO1xyXG5cclxuICAgIGlmICghcmVzcG9uc2UuZGF0YSkge1xyXG4gICAgICByZXR1cm4gdGh1bmtBUEkucmVqZWN0V2l0aFZhbHVlKFwiTm8gZGF0YSBpbiByZXNwb25zZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aHVua0FQSS5kaXNwYXRjaChQcm9maWxlQ2FyZEFjdGlvbnMudXBkYXRlUHJvZmlsZShyZXNwb25zZS5kYXRhKSk7XHJcblxyXG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XHJcbiAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcclxuICAgIHRodW5rQVBJLnJlamVjdFdpdGhWYWx1ZShcclxuICAgICAgZXJyPy5yZXNwb25zZT8uZGF0YT8ubWVzc2FnZSB8fCBcIkVycm9yIHdpdGggc2VydmVyIVwiLFxyXG4gICAgKTtcclxuICB9XHJcbn0pO1xyXG4iLCJpbXBvcnQgeyBGQywgbWVtbyB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjbGFzc05hbWVzIH0gZnJvbSBcInNoYXJlZC9saWIvQ2xhc3NOYW1lcy9jbGFzc05hbWVzXCI7XHJcbmltcG9ydCBtYWluQ2xhc3NlcyBmcm9tIFwiLi9Qcm9maWxlUGFnZS5tb2R1bGUuc2Nzc1wiO1xyXG5pbXBvcnQgeyBQcm9maWxlQ2FyZCB9IGZyb20gXCJmZWF0dXJlcy9FZGl0YWJsZVByb2ZpbGVDYXJkXCI7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSBcInJlYWN0LWkxOG5leHRcIjtcclxuXHJcbmludGVyZmFjZSBQcm9maWxlUGFnZVByb3BzIHtcclxuICBzb21lQ2xhc3Nlcz86IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgUHJvZmlsZVBhZ2U6IEZDPFByb2ZpbGVQYWdlUHJvcHM+ID0gbWVtbygoeyBzb21lQ2xhc3NlcyB9KSA9PiB7XHJcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXMobWFpbkNsYXNzZXMuUHJvZmlsZVBhZ2UsIHt9LCBbc29tZUNsYXNzZXNdKX0+XHJcbiAgICAgIHt0PHN0cmluZz4oXCLRgdGC0YDQsNC90LjRhtCwINC/0YDQvtGE0LjQu9GMXCIpfVxyXG4gICAgICA8UHJvZmlsZUNhcmQgLz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUHJvZmlsZVBhZ2U7XHJcbiIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IGRlZmF1bHQge1wiUHJvZmlsZVBhZ2VcIjpcIldEY1BQREg4XCJ9OyJdLCJuYW1lcyI6WyJnZXRQcm9maWxlQnlJZCIsImNyZWF0ZUFzeW5jVGh1bmsiLCJpZCIsInRodW5rQVBJIiwiZXh0cmEiLCJhcGkiLCJwb3N0IiwicmVzcG9uc2UiLCJfYyIsInNlbnQiLCJkYXRhIiwiZnVsZmlsbFdpdGhWYWx1ZSIsInJlamVjdFdpdGhWYWx1ZSIsImVycm9yTWVzc2FnZSIsIl9iIiwiX2EiLCJlcnJfMSIsIm1lc3NhZ2UiLCJQcm9maWxlU3RhdGUiLCJpc0xvYWRpbmciLCJlcnJvciIsInVuZGVmaW5lZCIsInJlYWRvbmx5IiwicHJvZmlsZURhdGEiLCJhZ2UiLCJjb3VudHJ5IiwibGFzdG5hbWUiLCJuYW1lIiwiUHJvZmlsZVNsaWNlIiwiY3JlYXRlU2xpY2UiLCJpbml0aWFsU3RhdGUiLCJyZWR1Y2VycyIsImV4dHJhUmVkdWNlcnMiLCJidWlsZGVyIiwiYWRkQ2FzZSIsInN0YXRlIiwiYWN0aW9uIiwicGF5bG9hZCIsInByb2ZpbGVSZWR1Y2VyIiwicmVkdWNlciIsImFjdGlvbnMiLCJQcm9maWxlQXN5bmMiLCJsYXp5IiwiZWRpdGFibGVQcm9maWxlIiwiUHJvZmlsZUNhcmRTbGljZSIsInVwZGF0ZVByb2ZpbGUiLCJfX2Fzc2lnbiIsInVwZGF0ZVByb2ZpbGVCeUlkIiwiZnVsZmlsbGVkIiwicGVuZGluZyIsInJlamVjdGVkIiwiUHJvZmlsZUNhcmRBY3Rpb25zIiwidXNlckRhdGEiLCJfX2F3YWl0ZXIiLCJkaXNwYXRjaCIsIm1lbW8iLCJzb21lQ2xhc3NlcyIsInQiLCJ1c2VUcmFuc2xhdGlvbiIsIl9qc3hzIiwiY2xhc3NOYW1lIiwiY2xhc3NOYW1lcyIsImNoaWxkcmVuIiwiX2pzeCIsIlByb2ZpbGVDYXJkIl0sInNvdXJjZVJvb3QiOiIifQ==